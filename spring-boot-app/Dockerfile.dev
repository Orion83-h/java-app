# syntax=docker/dockerfile:1

# Stage 1: Build Stage (Uses Eclipse Temurin JDK for Java 11)
FROM eclipse-temurin:11-jdk-alpine AS builder

# Set a non-root user for security
RUN addgroup -S spring && adduser -S spring -G spring
USER spring:spring

# Set working directory
WORKDIR /build

# Copy the pre-built JAR from Jenkins workspace or build artifacts
COPY spring-boot-app/target/spring-boot-web.jar app.jar

# Stage 2: Runtime Stage (Uses Google Distroless Java 11)
FROM gcr.io/distroless/java11-debian11 AS runtime

# Set the working directory for the application
WORKDIR /opt/app

# Copy the JAR file from the builder stage
COPY --from=builder /build/app.jar app.jar

# Expose the application port
EXPOSE 8084

# Define the entry point to run the application
ENTRYPOINT ["java", "-jar", "app.jar"]
