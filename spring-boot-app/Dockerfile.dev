# syntax=docker/dockerfile:1

# Use Eclipse Temurin as base image
FROM bellsoft/liberica-openjdk-alpine:17 AS base

ENV WORK_DIR=/opt/app

# Set a non-root user for security
RUN addgroup -S spring && adduser -S spring -G spring

# Switch to the non-root user
USER spring:spring

# Set the working directory
WORKDIR ${WORK_DIR}

# Copy the application JAR
COPY spring-boot-app/target/spring-boot-web.jar app.jar

# Stage 2: Final stage with minimal footprint
FROM bellsoft/liberica-openjdk-alpine:17 AS final

ENV WORK_DIR=/opt/app

# Copy built artifacts from the build stage to the final stage
COPY --from=base ${WORK_DIR} ${WORK_DIR}

# Expose application port
EXPOSE 8084

ENTRYPOINT ["java","-jar","app.jar"]